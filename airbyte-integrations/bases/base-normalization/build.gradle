import java.nio.file.Paths

plugins {
    id 'airbyte-docker-bmuschko'
    id 'airbyte-python'
}

airbytePython {
    moduleDirectory 'normalization'
}

dependencies {
    implementation project(':airbyte-workers')
}

// we need to access the sshtunneling script from airbyte-workers for ssh support
task copySshScript(type: Copy, dependsOn: [project(':airbyte-workers').processResources]) {
    from "${project(':airbyte-workers').buildDir}/resources/main"
    into "${buildDir}"
    include "sshtunneling.sh"
}

// make sure the copy task above worked (if it fails, it fails silently annoyingly)
task checkSshScriptCopy(type: Task, dependsOn: copySshScript) {
    doFirst {
        assert file("${buildDir}/sshtunneling.sh").exists() :
                "Copy of sshtunneling.sh failed, check that it is present in airbyte-workers."
    }
}

assemble.dependsOn(checkSshScriptCopy)
test.dependsOn(checkSshScriptCopy)

integrationTest.dependsOn(build)

airbyteDockerBmuschko {
    dockerfileToImageName = [
        'Dockerfile': 'normalization',
        'mssql.Dockerfile': 'normalization-mssql',
        'mysql.Dockerfile': 'normalization-mysql',
        'oracle.Dockerfile': 'normalization-oracle',
        'clickhouse.Dockerfile': 'normalization-clickhouse',
        'snowflake.Dockerfile': 'normalization-snowflake',
        'redshift.Dockerfile': 'normalization-redshift',
    ]
    additionalDependencies = [checkSshScriptCopy]
}

task("customIntegrationTestPython", type: PythonTask, dependsOn: installTestReqs) {
    module = "pytest"
    command = "-s integration_tests"

    dependsOn ':airbyte-integrations:bases:base-normalization:buildDockerImage-all'

    dependsOn ':airbyte-integrations:connectors:destination-bigquery:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-mysql:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-postgres:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-redshift:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-snowflake:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-oracle:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-mssql:airbyteDocker'
    dependsOn ':airbyte-integrations:connectors:destination-clickhouse:airbyteDocker'
}

integrationTest.dependsOn("customIntegrationTestPython")
customIntegrationTests.dependsOn("customIntegrationTestPython")

// TODO fix and use https://github.com/airbytehq/airbyte/issues/3192 instead
task('mypyCheck', type: PythonTask) {
    module = "mypy"
    command = "normalization --config-file ${project.rootProject.file('pyproject.toml').absolutePath}"

    dependsOn 'blackFormat'
}
check.dependsOn mypyCheck
